// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class AActor;
class UPrimitiveComponent;
struct FHitResult;
#ifdef DREAMDEFENDER_BaseLight_generated_h
#error "BaseLight.generated.h already included, missing '#pragma once' in BaseLight.h"
#endif
#define DREAMDEFENDER_BaseLight_generated_h

#define Build_Source_DreamDefender_BaseLight_h_11_RPC_WRAPPERS \
	virtual void OnOverlapEnd_Implementation(AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex); \
	virtual void OnOverlapBegin_Implementation(AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult& SweepResult); \
 \
	DECLARE_FUNCTION(execCheckEnemyLineOfSight) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->CheckEnemyLineOfSight(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execRemoveParentActorToIgnore) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		this->RemoveParentActorToIgnore(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execAddParentActorToIgnore) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		this->AddParentActorToIgnore(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execToggleEquipToActor) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		this->ToggleEquipToActor(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execPrintEnemiesInArray) \
	{ \
		P_FINISH; \
		this->PrintEnemiesInArray(); \
	} \
 \
	DECLARE_FUNCTION(execRemoveEnemyOfArrays) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		this->RemoveEnemyOfArrays(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execAddEnemyToArrays) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		this->AddEnemyToArrays(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execGetDamageTime) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetDamageTime(); \
	} \
 \
	DECLARE_FUNCTION(execSetDamageTime) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_time); \
		P_FINISH; \
		this->SetDamageTime(Z_Param_time); \
	} \
 \
	DECLARE_FUNCTION(execGetDamageValue) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetDamageValue(); \
	} \
 \
	DECLARE_FUNCTION(execSetDamageValue) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_damage); \
		P_FINISH; \
		this->SetDamageValue(Z_Param_damage); \
	} \
 \
	DECLARE_FUNCTION(execGetLightIntensity) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetLightIntensity(); \
	} \
 \
	DECLARE_FUNCTION(execSetLightIntensity) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_intensity); \
		P_FINISH; \
		this->SetLightIntensity(Z_Param_intensity); \
	} \
 \
	DECLARE_FUNCTION(execGetLightOn) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->GetLightOn(); \
	} \
 \
	DECLARE_FUNCTION(execSetLightOff) \
	{ \
		P_FINISH; \
		this->SetLightOff(); \
	} \
 \
	DECLARE_FUNCTION(execSetLightOn) \
	{ \
		P_FINISH; \
		this->SetLightOn(); \
	} \
 \
	DECLARE_FUNCTION(execToggleLight) \
	{ \
		P_FINISH; \
		this->ToggleLight(); \
	} \
 \
	DECLARE_FUNCTION(execEnemiesInLightUpdate) \
	{ \
		P_FINISH; \
		this->EnemiesInLightUpdate(); \
	} \
 \
	DECLARE_FUNCTION(execOnOverlapEnd) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_OtherActor); \
		P_GET_OBJECT(UPrimitiveComponent,Z_Param_OtherComp); \
		P_GET_PROPERTY(UIntProperty,Z_Param_OtherBodyIndex); \
		P_FINISH; \
		this->OnOverlapEnd_Implementation(Z_Param_OtherActor,Z_Param_OtherComp,Z_Param_OtherBodyIndex); \
	} \
 \
	DECLARE_FUNCTION(execOnOverlapBegin) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_OtherActor); \
		P_GET_OBJECT(UPrimitiveComponent,Z_Param_OtherComp); \
		P_GET_PROPERTY(UIntProperty,Z_Param_OtherBodyIndex); \
		P_GET_UBOOL(Z_Param_bFromSweep); \
		P_GET_STRUCT_REF(FHitResult,Z_Param_Out_SweepResult); \
		P_FINISH; \
		this->OnOverlapBegin_Implementation(Z_Param_OtherActor,Z_Param_OtherComp,Z_Param_OtherBodyIndex,Z_Param_bFromSweep,Z_Param_Out_SweepResult); \
	}


#define Build_Source_DreamDefender_BaseLight_h_11_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execCheckEnemyLineOfSight) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->CheckEnemyLineOfSight(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execRemoveParentActorToIgnore) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		this->RemoveParentActorToIgnore(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execAddParentActorToIgnore) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		this->AddParentActorToIgnore(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execToggleEquipToActor) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		this->ToggleEquipToActor(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execPrintEnemiesInArray) \
	{ \
		P_FINISH; \
		this->PrintEnemiesInArray(); \
	} \
 \
	DECLARE_FUNCTION(execRemoveEnemyOfArrays) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		this->RemoveEnemyOfArrays(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execAddEnemyToArrays) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_actor); \
		P_FINISH; \
		this->AddEnemyToArrays(Z_Param_actor); \
	} \
 \
	DECLARE_FUNCTION(execGetDamageTime) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetDamageTime(); \
	} \
 \
	DECLARE_FUNCTION(execSetDamageTime) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_time); \
		P_FINISH; \
		this->SetDamageTime(Z_Param_time); \
	} \
 \
	DECLARE_FUNCTION(execGetDamageValue) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetDamageValue(); \
	} \
 \
	DECLARE_FUNCTION(execSetDamageValue) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_damage); \
		P_FINISH; \
		this->SetDamageValue(Z_Param_damage); \
	} \
 \
	DECLARE_FUNCTION(execGetLightIntensity) \
	{ \
		P_FINISH; \
		*(float*)Z_Param__Result=this->GetLightIntensity(); \
	} \
 \
	DECLARE_FUNCTION(execSetLightIntensity) \
	{ \
		P_GET_PROPERTY(UFloatProperty,Z_Param_intensity); \
		P_FINISH; \
		this->SetLightIntensity(Z_Param_intensity); \
	} \
 \
	DECLARE_FUNCTION(execGetLightOn) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->GetLightOn(); \
	} \
 \
	DECLARE_FUNCTION(execSetLightOff) \
	{ \
		P_FINISH; \
		this->SetLightOff(); \
	} \
 \
	DECLARE_FUNCTION(execSetLightOn) \
	{ \
		P_FINISH; \
		this->SetLightOn(); \
	} \
 \
	DECLARE_FUNCTION(execToggleLight) \
	{ \
		P_FINISH; \
		this->ToggleLight(); \
	} \
 \
	DECLARE_FUNCTION(execEnemiesInLightUpdate) \
	{ \
		P_FINISH; \
		this->EnemiesInLightUpdate(); \
	} \
 \
	DECLARE_FUNCTION(execOnOverlapEnd) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_OtherActor); \
		P_GET_OBJECT(UPrimitiveComponent,Z_Param_OtherComp); \
		P_GET_PROPERTY(UIntProperty,Z_Param_OtherBodyIndex); \
		P_FINISH; \
		this->OnOverlapEnd_Implementation(Z_Param_OtherActor,Z_Param_OtherComp,Z_Param_OtherBodyIndex); \
	} \
 \
	DECLARE_FUNCTION(execOnOverlapBegin) \
	{ \
		P_GET_OBJECT(AActor,Z_Param_OtherActor); \
		P_GET_OBJECT(UPrimitiveComponent,Z_Param_OtherComp); \
		P_GET_PROPERTY(UIntProperty,Z_Param_OtherBodyIndex); \
		P_GET_UBOOL(Z_Param_bFromSweep); \
		P_GET_STRUCT_REF(FHitResult,Z_Param_Out_SweepResult); \
		P_FINISH; \
		this->OnOverlapBegin_Implementation(Z_Param_OtherActor,Z_Param_OtherComp,Z_Param_OtherBodyIndex,Z_Param_bFromSweep,Z_Param_Out_SweepResult); \
	}


#define Build_Source_DreamDefender_BaseLight_h_11_EVENT_PARMS \
	struct BaseLight_eventOnOverlapBegin_Parms \
	{ \
		AActor* OtherActor; \
		UPrimitiveComponent* OtherComp; \
		int32 OtherBodyIndex; \
		bool bFromSweep; \
		FHitResult SweepResult; \
	}; \
	struct BaseLight_eventOnOverlapEnd_Parms \
	{ \
		AActor* OtherActor; \
		UPrimitiveComponent* OtherComp; \
		int32 OtherBodyIndex; \
	};


extern DREAMDEFENDER_API  FName DREAMDEFENDER_OnOverlapBegin;
extern DREAMDEFENDER_API  FName DREAMDEFENDER_OnOverlapEnd;
extern DREAMDEFENDER_API  FName DREAMDEFENDER_PlaySoundOnNightmaresHit;
extern DREAMDEFENDER_API  FName DREAMDEFENDER_StopSoundOnNightmaresExit;
#define Build_Source_DreamDefender_BaseLight_h_11_CALLBACK_WRAPPERS
#define Build_Source_DreamDefender_BaseLight_h_11_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesABaseLight(); \
	friend DREAMDEFENDER_API class UClass* Z_Construct_UClass_ABaseLight(); \
	public: \
	DECLARE_CLASS(ABaseLight, AActor, COMPILED_IN_FLAGS(0), 0, DreamDefender, NO_API) \
	DECLARE_SERIALIZER(ABaseLight) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<ABaseLight*>(this); }


#define Build_Source_DreamDefender_BaseLight_h_11_INCLASS \
	private: \
	static void StaticRegisterNativesABaseLight(); \
	friend DREAMDEFENDER_API class UClass* Z_Construct_UClass_ABaseLight(); \
	public: \
	DECLARE_CLASS(ABaseLight, AActor, COMPILED_IN_FLAGS(0), 0, DreamDefender, NO_API) \
	DECLARE_SERIALIZER(ABaseLight) \
	/** Indicates whether the class is compiled into the engine */    enum {IsIntrinsic=COMPILED_IN_INTRINSIC}; \
	virtual UObject* _getUObject() const override { return const_cast<ABaseLight*>(this); }


#define Build_Source_DreamDefender_BaseLight_h_11_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API ABaseLight(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(ABaseLight) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, ABaseLight); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(ABaseLight); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API ABaseLight(const ABaseLight& InCopy); \
public:


#define Build_Source_DreamDefender_BaseLight_h_11_ENHANCED_CONSTRUCTORS \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API ABaseLight(const ABaseLight& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, ABaseLight); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(ABaseLight); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(ABaseLight)


#define Build_Source_DreamDefender_BaseLight_h_8_PROLOG \
	Build_Source_DreamDefender_BaseLight_h_11_EVENT_PARMS


#define Build_Source_DreamDefender_BaseLight_h_11_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Build_Source_DreamDefender_BaseLight_h_11_RPC_WRAPPERS \
	Build_Source_DreamDefender_BaseLight_h_11_CALLBACK_WRAPPERS \
	Build_Source_DreamDefender_BaseLight_h_11_INCLASS \
	Build_Source_DreamDefender_BaseLight_h_11_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define Build_Source_DreamDefender_BaseLight_h_11_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	Build_Source_DreamDefender_BaseLight_h_11_RPC_WRAPPERS_NO_PURE_DECLS \
	Build_Source_DreamDefender_BaseLight_h_11_CALLBACK_WRAPPERS \
	Build_Source_DreamDefender_BaseLight_h_11_INCLASS_NO_PURE_DECLS \
	Build_Source_DreamDefender_BaseLight_h_11_ENHANCED_CONSTRUCTORS \
private: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID Build_Source_DreamDefender_BaseLight_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
